{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Option","Select","App","props","menu","Item","target","rel","href","pieces","enterLoading","state","socket","connect","navigator","mediaDevices","getUserMedia","audio","then","stream","audioContext","window","AudioContext","webkitAudioContext","source","createMediaStreamSource","node","createScriptProcessor","emit","sampleRate","onaudioprocess","audioProcessingEvent","left","inputBuffer","getChannelData","obj","forEach","elem","i","setState","lenSamples","on","tempo","volume","tempoData","x","length","y","volumeData","tempoVolume","globalTempo","globalVolume","destination","stop","console","log","signal","disconnect","pieceChange","windowChange","io","started","microphone","pTempoData","pVolumeData","className","theme","VictoryTheme","material","interpolation","style","data","stroke","blue","primary","parent","border","this","magenta","domain","fill","cyan","type","onClick","defaultValue","width","onChange","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92dfe7b1.chunk.js","sourcesContent":["import { Button, Menu, Select } from 'antd';\nimport React from 'react';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport 'microphone-stream';\nimport io from 'socket.io-client';\nimport { VictoryChart, VictoryLine, VictoryTheme, VictoryScatter } from \"victory\";\nimport { blue, magenta, cyan } from '@ant-design/colors';\n\nconst { Option } = Select;\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    var socket = io(\"https://www.tonetwelve.com/test\");\n    this.state = {\n      started : false,\n      microphone : null,\n      socket: socket,\n      lenSamples : 0,\n      globalTempo: \"none\",\n      globalVolume: \"none\",\n      tempoData: [],\n      pTempoData: [],\n      volumeData: [],\n      pVolumeData: [],\n      tempoVolume: [{x: 0, y: 0}]\n    };\n  }\n  menu = (\n    <Menu>\n      <Menu.Item>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.alipay.com/\">\n          1 sec\n        </a>\n      </Menu.Item>\n      <Menu.Item>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.taobao.com/\">\n          2 sec\n        </a>\n      </Menu.Item>\n      <Menu.Item>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.tmall.com/\">\n          3 sec\n        </a>\n      </Menu.Item>\n    </Menu>\n  );\n  pieces = (\n    <Menu>\n      <Menu.Item>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.alipay.com/\">\n          Schumann/Liszt Widmung(Trifonov)\n        </a>\n      </Menu.Item>\n    </Menu>\n  )\n  enterLoading = () => {\n    var ob = this;\n    this.state.socket.connect();\n    navigator.mediaDevices\n      .getUserMedia({ audio: true }).then((stream) => {\n        var audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        var source = audioContext.createMediaStreamSource(stream);\n        var node = audioContext.createScriptProcessor(4096, 1, 1);\n        this.state.socket.emit('sample_rate', audioContext.sampleRate);\n        \n        node.onaudioprocess = (audioProcessingEvent) => {\n            // The input buffer is the song we loaded earlier\n          let inputBuffer = audioProcessingEvent.inputBuffer;\n          var left = inputBuffer.getChannelData(0);\n          var obj = {};\n          left.forEach((elem, i) => {\n            obj[i] = elem;\n          })\n          this.state.socket.emit(\"message\", obj);\n          this.setState({lenSamples : this.state.lenSamples + 1})\n          // take 3 seconds of samples\n          if(this.state.lenSamples >= (3 * audioContext.sampleRate) / 4096 ) {\n            this.setState({lenSamples : 0 });\n            this.state.socket.emit('tempo', true);\n          }\n        }\n        this.state.socket.on('output local tempo', ({tempo, volume}) => {\n          this.setState({\n            tempoData: [...this.state.tempoData, {x: this.state.tempoData.length * 3, y: tempo}],\n            // pTempoData: [...this.state.pTempoData, {x: this.state.tempoData.length * 3, y: p_tempo}],\n            // pVolumeData: [...this.state.pVolumeData, {x: this.state.volumeData.length * 3, y: p_volume}],\n            volumeData: [...this.state.volumeData, {x: this.state.volumeData.length * 3, y: volume}],\n            tempoVolume: [{x: tempo, y: volume}],\n            // pTempoVolume: [{x: p_tempo, y: p_volume}]\n          })\n        })\n        this.state.socket.on('output global tempo', ({tempo, volume}) => {\n          this.setState({\n            globalTempo : tempo + \" BPM\",\n            globalVolume : volume + \"db\"\n          })\n        })\n        // Connect the microphone to the script processor\n        source.connect(node);\n        node.connect(audioContext.destination);\n\n        this.setState({\n          source: source,\n          node: node\n        })\n      });\n  };\n  stop = () => {\n    if(this.state.source){\n      this.state.socket.emit(\"tempo\", false);\n      console.log(this.state.signal);\n      this.state.node.disconnect();\n      this.state.source.disconnect();\n      this.setState({\n        source: null,\n        node: null,\n      });\n    }\n  };\n  pieceChange = () => {\n\n  };\n  windowChange = () => {\n\n  }\n  render() {\n    return (\n      <>\n        <div className=\"main-container\">\n          <div className=\"info-container\">\n          <h3>Tempo(BPM)</h3>\n          <VictoryChart\n            theme={VictoryTheme.material}\n          >\n            <VictoryLine\n              interpolation=\"natural\"\n              style={{\n                data: { stroke: blue.primary },\n                parent: { border: \"1px solid #ccc\"}\n              }}\n              data= {this.state.tempoData}\n            />\n            {/* <VictoryLine\n              interpolation=\"natural\"\n              style={{\n                data: { stroke: cyan.primary },\n                parent: { border: \"1px solid #ccc\"}\n              }}\n              data= {this.state.pTempoData}\n            /> */}\n          </VictoryChart>\n          <h3>Volume(db)</h3>\n          <VictoryChart\n            theme={VictoryTheme.material}\n          >\n            <VictoryLine\n              style={{\n                data: { stroke: magenta.primary },\n                parent: { border: \"1px solid #ccc\"}\n              }}\n              data= {this.state.volumeData}\n            />\n            {/* <VictoryLine\n              style={{\n                data: { stroke: cyan.primary },\n                parent: { border: \"1px solid #ccc\"}\n              }}\n              data= {this.state.pVolumeData}\n            /> */}\n          </VictoryChart>\n          <h3>Tempo vs Volume</h3>\n          <VictoryChart\n            theme={VictoryTheme.material}\n            domain={{ x: [70, 200], y: [70, 150] }}\n          >\n            <VictoryScatter\n              style={{\n                data: { fill: cyan.primary },\n                parent: { border: \"1px solid #ccc\"}\n              }}\n              data= {this.state.tempoVolume}\n            />\n            {/* <VictoryScatter\n              style={{\n                data: { fill: blue.primary },\n                parent: { border: \"1px solid #ccc\"}\n              }}\n              data= {this.state.pTempoVolume}\n            /> */}\n          </VictoryChart>\n          </div>\n          <div className=\"flex-row\">\n            <div>\n              <h3>Global Tempo: {this.state.globalTempo}</h3>\n              <h3>Global Volume: {this.state.globalVolume}</h3>\n            </div>\n            <div className=\"center-console\">\n              <Button type=\"primary\" onClick={() => this.enterLoading()}>\n                Start\n              </Button>\n              <Button type=\"danger\" onClick={() => this.stop()}>\n                Stop\n              </Button>\n              <Select defaultValue=\"widmung\" style={{ width: 120 }} onChange={() => this.pieceChange()}>\n                <Option value=\"widmung\">Widmung</Option>\n              </Select>\n              <Select defaultValue=\"3\" style={{ width: 120 }} onChange={() => this.windowChange()}>\n                <Option value=\"3\">3 Secs</Option>\n                <Option value=\"3\">6 Secs</Option>\n                <Option value=\"3\">9 Secs</Option>\n              </Select>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"app-header\">\n      <h1>Vivace</h1>\n    </div>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}